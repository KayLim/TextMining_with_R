install.packages("rJava")
install.packages("memoise")
install.packages("KoNLP")
install.packages("vctrs")
install.packages("dplyr")


library(KoNLP)
library(dplyr)

Sys.setenv(JAVA_HOME="C:/Program Files/Java/jre1.8.0_231/")
useNIADic()


txt<-readLines("C:/Users/sundooedu/data/hiphop.txt")
head(txt)

#install.packages("stringr")
library(stringr)
txt<-str_replace_all(txt, "\\W", " ")
head(txt)

extractNoun("대한민국의 영토는 한반도와 그 부속도서로 한다")

nouns <- extractNoun(txt)
nouns

wordcount<-table(unlist(nouns))
wordcount

df_word<-as.data.frame(wordcount, stringsAsFactors = F)

df_word<-rename(df_word, word=Var1, freq=Freq)

df_word<-filter(df_word, nchar(word)>=2)

top_20<-df_word %>%
  arrange(desc(freq)) %>%
  head(20)

top_20


install.packages("wordcloud")
library(wordcloud)
install.packages("RcolorBrewer")
library(RColorBrewer)


pal <- brewer.pal(8,"Dark2")
set.seed(1234)                   # 난수 고정
wordcloud(words = df_word$word,  # 단어
          freq = df_word$freq,   # 빈도
          min.freq = 2,          # 최소 단어 빈도
          max.words = 200,       # 표현 단어 수
          random.order = F,      # 고빈도 단어 중앙 배치
          rot.per = .1,          # 회전 단어 비율
          scale = c(4, 0.3),     # 단어 크기 범위
          colors = pal)          # 색깔 목록


twitter <- read.csv("C:/Users/sundooedu/data/twitter.csv",                     
                    header = T,
                    stringsAsFactors = F,
                    fileEncoding = "UTF-8") 
twitter

twitter <- rename(twitter,
                  no = 번호,
                  id = 계정이름,
                  date = 작성일,
                  tw = 내용) 
twitter
twitter$tw <- str_replace_all(twitter$tw, "\\W", " ") 
nouns <- extractNoun(twitter$tw) 
wordcount <- table(unlist(nouns)) 
df_word <- as.data.frame(wordcount, stringsAsFactors = F) 
df_word <- rename(df_word,
                  word = Var1,                   
                  freq = Freq)
df_word
top20 <- df_word %>%
  arrange(desc(freq)) %>%
  head(20) 
library(ggplot2)
order<-arrange(top20, freq)$word

ggplot(data = top20, aes(x = word, y = freq)) +
  ylim(0, 2500) +   
  geom_col() +   
  coord_flip() +   
  scale_x_discrete(limit = order) +              # 빈도 순서 변수 기준 막대 정렬
  geom_text(aes(label = freq), hjust = -0.3) 


pal <- brewer.pal(8,"Dark2")       # 색상 목록 생성
set.seed(1234)                     # 난수 고정


wordcloud(words = df_word$word,    # 단어
          freq = df_word$freq,     # 빈도
          min.freq = 10,           # 최소 단어 빈도
          max.words = 200,         # 표현 단어 수
          random.order = F,        # 고빈도 단어 중앙 배치
          rot.per = .1,            # 회전 단어 비율
          scale = c(6, 0.2),       # 단어 크기 범위
          colors = pal)            # 색상 목록


pal <- brewer.pal(9,"Blues")[5:9]  # 색상 목록 생성
set.seed(1234)                     # 난수 고정


wordcloud(words = df_word$word,    # 단어
          freq = df_word$freq,     # 빈도
          min.freq = 10,           # 최소 단어 빈도
          max.words = 200,         # 표현 단어 수
          random.order = F,        # 고빈도 단어 중앙 배치
          rot.per = .1,            # 회전 단어 비율
          scale = c(6, 0.2),       # 단어 크기 범위
          colors = pal)            # 색상 목록
